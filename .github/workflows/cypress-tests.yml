name: Cypress E2E Tests (Docker)

on:
  schedule:
    - cron: '*/30 * * * *'  # Runs every 30 minutes
  workflow_dispatch:
    inputs:
      description:
        description: 'Test run description'
        required: false
        type: string
        default: 'Manual test run'
      env:
        description: 'Environment (e.g., staging, production, dev)'
        required: false
        type: string
        default: 'staging'
      ver:
        description: 'Version (e.g., 1.0.0, v2.3.1)'
        required: false
        type: string
        default: '1.0.0'
      tags:
        description: 'Tags (e.g., @smoke, @contact and @must-pass)'
        required: false
        type: string
        default: '@smoke'
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  cypress-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: make docker-build

      - name: Run Cypress tests in Docker
        run: make docker-test TAGS="${{ inputs.tags || '@smoke' }}" ENV="${{ inputs.env || 'staging' }}" VER="${{ inputs.ver || '1.0.0' }}"

      - name: Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore
          retention-days: 7

      - name: Clean up Docker resources
        if: always()
        run: |
          docker rmi -f planit-cypress:latest || true
